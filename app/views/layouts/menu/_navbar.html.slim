- user_level = current_user.level


- if Controller.find_by(name: 'absents').controller_methods.find_by(name: 'index').user_methods.pluck(:user_level).include? user_level
  li
    a.collapsible-header.waves-effect.arrow-r href="#{absents_path}"
      | Absensi


- if Controller.find_by(name: 'members').controller_methods.find_by(name: 'index').user_methods.pluck(:user_level).include? user_level
  li
    a.collapsible-header.waves-effect.arrow-r href="#{members_path}"
      | Member


- if Controller.find_by(name: 'stores').controller_methods.find_by(name: 'index').user_methods.pluck(:user_level).include? user_level
  li
    a.collapsible-header.waves-effect.arrow-r href="#{stores_path}"
      | Toko
    
- if Controller.find_by(name: 'items').controller_methods.find_by(name: 'index').user_methods.pluck(:user_level).include? user_level
  li
    a.collapsible-header.waves-effect.arrow-r href="#{stocks_path}"
      | Stok Barang
    

- have_sync_access = true if current_user.store.id == Transaction.last.store.id

- if have_sync_access
  hr
  - if Controller.find_by(name: 'transactions').controller_methods.find_by(name: 'index').user_methods.pluck(:user_level).include? user_level
    li
      a.collapsible-header.waves-effect.arrow-r  href="#{new_transaction_path}"
        | Transaksi

  hr


- if ["super_visi", "super_admin", "owner"].include? current_user.level
  li
    a.collapsible-header.waves-effect.arrow-r  href="#{backups_path}"
      | Backup